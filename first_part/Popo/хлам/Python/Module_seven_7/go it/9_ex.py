# Підсписком (sublist) називають список, що є складовою більшого списку. 
# Підсписок може містити один елемент, множину елементів або бути порожнім.

# Наприклад, [1], [2], [3] та [4] є підсписками списку [1, 2, 3, 4]. Список [2, 3] також входить до складу [1, 2, 3, 4], але при цьому список [2, 4]
# не є підсписком [1, 2, 3, 4], оскільки у вихідному списку числа 2 і 4 не є сусідами.

# Порожній список є підсписком будь-якого списку.

# Напишіть функцію all_sub_lists, що повертає список, який містить всі можливі підсписки заданого.

# Наприклад, якщо функції передано аргумент список [1, 2, 3], то функція має повернути наступний список: [[], [1], [2], [3], [1, 2], [2, 3], [1, 2, 3]].


# Функція all_sub_lists повинна повертати щонайменше один список з порожнім підсписком [[]].

def all_sub_lists(data):
    new_sublist = [[]]
    for length in range(1, len(data) + 1): #  получаем 1 #  дальше получаем 2 
        for i in range(0, len(data) - length + 1): #  получаем 0 индекс и до 3  #  дальше идет опять итерация и опять начинаем с 0 индекса
            new_sublist.append(data[i: i + length]) # data [0: 1] - добавляет [1] в список  потом [2][3][4] на этом первая итерация закончилась # за счет среза уже добавляется 0 и 1 елемент типа [1,2]
    return new_sublist


print(all_sub_lists([1, 2, 3, 4, ]))
    