LATIN = (".", ",", "?", "!", ":", "A", "B", "C", "D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"," ")
PICK = ("1","11","111","1111","11111","2","22","222","3","33","333","4","44","444","5","55","555","6","66","666","7","77","777","7777","8","88","888","9","99","999","9999","0")
TRANS = {}  
for c , i  in  zip(LATIN, PICK):
    TRANS[ord(c)] = i
    TRANS[ord(c.lower())] = i    
        
       
        
def sequence_buttons(string):
    translated = string.translate(TRANS)
    return translated

        
        
a = input("Введите вашу строку>>>")
print(sequence_buttons(a))



# Як ви знаєте, раніше телефони були з кнопками, та й зараз вони є подекуди у вжитку. Тоді текстові повідомлення набиралися за допомогою цифрових кнопок. 
# Як інженери телефонів створили набір тексту?
#  Рішення було в тому, що одна кнопка була асоційована одночасно з декількома літерами, а вибір залежав від кількості натискань на кнопку.
#  Одноразове натискання призводило до появи першої літери у відповідному цій кнопці списку, наступні натискання змінювали її на наступну.

# Символи, що відповідають кнопкам на телефонах

# Кнопка	Символи
# 1	. , ? ! :
# 2	A B C
# 3	D E F
# 4	G H I
# 5	J K L
# 6	M N O
# 7	P Q R S
# 8	T U V
# 9	W X Y Z
# 0	Пробіл
# Напишіть функцію sequence_buttons, що показує послідовність кнопок, яку необхідно натиснути, щоб на екрані телефону з'явився текст,
#  введений користувачем.

# Створіть словник, який відповідає символам з кнопками, які потрібно натиснути.

# Приклад: якщо функції sequence_buttons передати рядок "Hello, World!", функція повинна повернути "4433555555666110966677755531111".

# Вимоги:

# функція коректно обробляє малі та великі літери.
# функція ігнорує символи, що не входять до зазначеного списку